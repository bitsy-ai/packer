on: 
  push:
    branches: [ main, devel ]
  workflow_dispatch:
env:
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.PACKER_SERVICE_ACCOUNT_KEY }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.PACKER_SERVICE_ACCOUNT }}

  GCP_BUCKET: print-nanny-cdn
  CPU_ARCH: arm64
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Install platform deps
      run: sudo apt-get install -y jq
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Write deploy key
      run: echo $GCP_SERVICE_ACCOUNT_KEY > key.json
    - name: Active Service Account
      run: gcloud auth activate-service-account $GCP_SERVICE_ACCOUNT --key-file=key.json
    - name: Make base image
      id: packer
      run: |
        make image RELEASE_CHANNEL=main CPU_ARCH=$CPU_ARCH
        echo ::set-output name=image_path::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')"
        echo ::set-output name=image_name::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_name')"
        echo ::set-output name=checksum::"$(cat dist/sha256.checksum)"
        echo ::set-output name=distro_version::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.distro_version')"
        echo ::set-output name=platform_version::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.platform_version')"
        echo ::set-output name=cpu_arch::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.cpu_arch')"
        echo ::set-output name=printnanny_cli_arch::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.printnanny_cli_arch')"
        echo ::set-output name=octoprint_version::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.octoprint_version')"
        echo ::set-output name=janus_version::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.janus_version')"
        echo ::set-output name=printnanny_cli_version::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.printnanny_cli_version')"


    - name: Upload to GCP_BUCKET
      run: |
        gsutil rsync -r dist/ gs://$GCP_BUCKET/releasess/main/${{ steps.packer.outputs.image_path }}/
    - name: Send Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.PRINT_NANNY_DISCORD_DEPLOY_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: |
          Published ${{ steps.packer.outputs.checksum }}
          ```
          distro_version ${{ steps.packer.outputs.distro_version }}
          platform_version ${{ steps.packer.outputs.platform_version }}
          cpu_arch ${{ steps.packer.outputs.cpu_arch }}
          printnanny_cli_version ${{ steps.packer.outputs.printnanny_cli_version }}
          octoprint_version ${{ steps.packer.outputs.octoprint_version }}
          janus_version ${{ steps.packer.outputs.janus_version }}
          ```