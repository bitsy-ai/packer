# bake a nightly image
on:
  # on manual trigger (packer repo) OR workflow_dispatch event from another repo's cd pipeline
  # https://github.community/t/triggering-by-other-repository/16163/6
  workflow_dispatch:
    inputs:
      RELEASE_CHANNEL:
        description: 'Publish image to release channel: (nightly, stable)'     
        required: true
        default: 'nightly'
    
env:
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.PACKER_SERVICE_ACCOUNT_KEY }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.PACKER_SERVICE_ACCOUNT }}
  GCP_BUCKET: print-nanny-cdn

jobs:
  generic:
    strategy:
      matrix:
        image_name:
          - generic-pi-buster-arm64
          # TODO
          # - generic-pi-bullseye-arm64
        include:
          - image_name: generic-pi-buster-arm64
            template_file: templates/generic-pi.pkr.hcl
            var_file: vars/generic-pi-buster-arm64.pkrvars.hcl
            ansible_extra_vars: vars/generic-pi-buster-arm64.ansiblevars.yml
          # TODO
          # - image_name: generic-pi-bullseye-arm64
          #   template_file: templates/generic-pi.pkr.hcl
          #   var_file: vars/generic-pi-bullseye-arm64.pkrvars.hcl
          #   ansible_extra_vars: vars/generic-pi-bullseye-arm64.ansiblevars.yml
    runs-on: ubuntu-latest
    steps:
    - name: Install platform deps
      run: sudo apt-get install -y jq wget
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Write deploy key
      run: echo $GCP_SERVICE_ACCOUNT_KEY > key.json
    - name: Active Service Account
      run: gcloud auth activate-service-account $GCP_SERVICE_ACCOUNT --key-file=key.json
    - name: Download ansible_extra_vars
      run: make ${{ matrix.ansible_extra_vars }}
    - name: Make base image
      id: packer
      run: |
        make dist/${{ matrix.image_name}}.img \
          PACKER_VAR_FILE=${{ matrix.var_file }} \
          RELEASE_CHANNEL=${{ github.event.inputs.RELEASE_CHANNEL }} \
          IMAGE_NAME=${{ matrix.image_name}} \
          PACKER_TEMPLATE_FILE=${{ matrix.template_file }} \
          ANSIBLE_EXTRA_VARS=${{ matrix.ansible_extra_vars }}

        echo ::set-output name=image_path::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')"
        echo ::set-output name=image_name::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_name')"
        echo ::set-output name=manifest::"$(cat dist/manifest.json)"
        echo ::set-output name=checksum::"$(cat dist/sha256.checksum)"
        echo ::set-output name=image_url::"https://cdn.print-nanny.com/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_name')"
        echo ::set-output name=checksum_url::"https://cdn.print-nanny.com/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')/sha256.checksum"
        echo ::set-output name=manifest_url::"https://cdn.print-nanny.com/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')/manifest.json"

    - name: Upload to GCP_BUCKET
      run: |
        gsutil rsync -r dist/ gs://$GCP_BUCKET/${{ steps.packer.outputs.image_path }}/
    - name: Send Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.PRINT_NANNY_DISCORD_DEPLOY_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: |
          Base image: `2021-05-07-raspios-buster-arm64`
          Published ${{ steps.packer.outputs.image_url }}
          Checksum ${{ steps.packer.outputs.checksum_url }}
          Build manifest ${{ steps.packer.outputs.manifest_url }}
  printnanny:
    needs: [generic]
    strategy:
      matrix:
        image_name:
          - printnanny-pi-buster-arm64
          # TODO
          # - printnanny-pi-bullseye-arm64
        include:
          - image_name: printnanny-pi-buster-arm64
            template_file: templates/generic-pi.pkr.hcl
            var_file: vars/printnanny-pi-buster-arm64.pkrvars.hcl
            ansible_extra_vars: vars/printnanny-pi-buster-arm64.ansiblevars.json

    runs-on: ubuntu-latest
    steps:
    - name: Install platform deps
      run: sudo apt-get install -y jq wget
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Write deploy key
      run: echo $GCP_SERVICE_ACCOUNT_KEY > key.json
    - name: Active Service Account
      run: gcloud auth activate-service-account $GCP_SERVICE_ACCOUNT --key-file=key.json
    - name: Download ansible_extra_vars
      run: make ${{ matrix.ansible_extra_vars }}
    - name: Make base image
      id: packer
      run: |
        make dist/${{ matrix.image_name}}.img \
          PACKER_VARS=-var "base_image_url=${{ needs.packer.outputs.image_url }}" -var "base_image_checksum=${{ needs.packer.outputs.image_checksum }}" \
          PACKER_VAR_FILE=${{ matrix.var_file }} \
          RELEASE_CHANNEL=${{ github.event.inputs.RELEASE_CHANNEL }} \
          IMAGE_NAME=${{ matrix.image_name}} \
          TEMPLATE_FILE=${{ matrix.template_file }} \
          ANSIBLE_EXTRA_VARS=${{ matrix.ansible_extra_vars }}

        echo ::set-output name=image_path::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')"
        echo ::set-output name=image_name::"$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_name')"
        echo ::set-output name=manifest::"$(cat dist/manifest.json)"
        echo ::set-output name=checksum::"$(cat dist/sha256.checksum)"
        echo ::set-output name=image_url::"https://cdn.print-nanny.com/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_name')"
        echo ::set-output name=checksum_url::"https://cdn.print-nanny.com/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')/sha256.checksum"
        echo ::set-output name=manifest_url::"https://cdn.print-nanny.com/$(cat dist/manifest.json | jq '.builds[-1].custom_data.image_path')/manifest.json"

    - name: Upload to GCP_BUCKET
      run: |
        gsutil rsync -r dist/ gs://$GCP_BUCKET/${{ steps.packer.outputs.image_path }}/
    - name: Send Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.PRINT_NANNY_DISCORD_DEPLOY_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: |
          Base image: `${{ needs.packer.outputs.image_name }}`
          Published ${{ steps.packer.outputs.image_url }}
          Checksum ${{ steps.packer.outputs.checksum_url }}
          Build manifest ${{ steps.packer.outputs.manifest_url }}