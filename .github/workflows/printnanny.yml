name: Print Nanny OS
on:
  workflow_dispatch:
    inputs:
      dryrun:
        description: 'Dry run: false|true'    
        required: true
        default: 'false'
env:
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.PACKER_SERVICE_ACCOUNT_KEY }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.PACKER_SERVICE_ACCOUNT }}
  GCP_BUCKET: print-nanny-cdn
  CDN_BASE_URL: https://cdn.print-nanny.com
jobs:

###
# begin printnanny base image jobs
###
  build-printnanny-os:
    strategy:
      matrix:
        os: [  bullseye ]
        arch: [ arm64 ]
        platform: [ debian ]
        variant: [ desktop, slim ]
        include:
          - image_name: printnanny-os-desktop-bullseye-arm64
            ansible_playbook: ./playbooks/printnanny/slim.yml
            ansible_extra_vars: vars/generic-pi-arm64.ansiblevars.yml
            packer_template_file: templates/generic-pi.pkr.hcl
            packer_var_file: vars/printnanny-pi-arm64.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: desktop
          - image_name: printnanny-os-slim-bullseye-arm64
            ansible_playbook: ./playbooks/printnanny/slim.yml
            ansible_extra_vars: vars/generic-pi-arm64.ansiblevars.yml
            packer_template_file: templates/generic-pi.pkr.hcl
            packer_var_file: vars/printnanny-pi-arm64.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: slim
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - id: build
        uses: ./.github/workflows/scripts/build
        with:
          IMAGE_NAME: ${{ matrix.image_name }}
          ANSIBLE_PLAYBOOK: ${{ matrix.ansible_playbook }}
          ANSIBLE_EXTRA_VARS: ${{ matrix.ansible_extra_vars }}
          PACKER_VAR_FILE: ${{ matrix.packer_var_file }}
          PACKER_TEMPLATE_FILE: ${{ matrix.packer_template_file }}
          GPG_SIGN_KEY: ${{ secrets.PRINTNANNY_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.PRINTNANNY_GPG_PASSPHRASE }}
          DRYRUN: ${{ github.event.inputs.dryrun }}
  nightly-printnanny-os:
    environment: nightly
    needs: [ build-printnanny-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name:
          - printnanny-os-desktop-bullseye-arm64
          - printnanny-os-slim-bullseye-arm64
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - id: publish-nightly
        uses: ./.github/workflows/scripts/publish-nightly
        with:
          IMAGE_NAME: ${{ matrix.image_name }}
          DISCORD_WEBHOOK: ${{ secrets.PRINT_NANNY_DISCORD_DEPLOY_WEBHOOK }}

  build-octoprint-os:
    environment: nightly
    needs: [ build-printnanny-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [  bullseye ]
        arch: [ arm64 ]
        platform: [ debian ]
        variant: [ desktop, slim ]
        include:
          - image_name: printnanny-os-desktop-bullseye-arm64--octoprint
            ansible_playbook: ./playbooks/octoprint/generic.yml
            base_image: printnanny-os-desktop-bullseye-arm64
            packer_template_file: templates/octoprint.pkr.hcl
            packer_var_file: vars/octoprint.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: desktop
          - image_name: printnanny-os-slim-bullseye-arm64--octoprint
            ansible_playbook: ./playbooks/octoprint/generic.yml
            base_image: printnanny-os-slim-bullseye-arm64
            packer_template_file: templates/octoprint.pkr.hcl
            packer_var_file: vars/octoprint.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: slim
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.base_image }}
          path: img
      - name: ls artifact contents
        run: |
          ls -ahl img
      - name: Rename img
        id: manifest
        run: |
          echo ::set-output name=base_image_checksum::"$(cat img/sha256.checksum | cut -d $'\t' -f 1)"
          echo ::set-output name=base_image_file::"$(cat img/manifest.json| jq '.builds[0].files[0].name' -r)"
          echo ::set-output name=base_image_stamp::"$(cat img/manifest.json| jq '.builds[0].custom_data.image_stamp' -r)"

          echo "image_name=\"${{ matrix.image_name }}\"" >> ${{ matrix.packer_var_file }}
          echo "base_image_name=\"file:/build/img/$(cat img/manifest.json| jq '.builds[0].custom_data.image_name' -r)\"" >> ${{ matrix.packer_var_file }}
          echo "base_image_url=\"file:/build/img/$(cat img/manifest.json| jq '.builds[0].files[0].name' -r)\"" >> ${{ matrix.packer_var_file }}
          echo "base_image_stamp=\"file:/build/img/$(cat img/manifest.json| jq '.builds[0].custom_data.image_stamp' -r)\"" >> ${{ matrix.packer_var_file }}
          echo "base_image_checksum=\"$(cat img/sha256.checksum | cut -d $'\t' -f 1)\"" >> ${{ matrix.packer_var_file }}
          cat vars/octoprint.pkrvars.hcl
      - id: build
        uses: ./.github/workflows/scripts/build
        with:
          IMAGE_NAME: ${{ matrix.image_name }}
          ANSIBLE_PLAYBOOK: ${{ matrix.ansible_playbook }}
          ANSIBLE_EXTRA_VARS: ${{ matrix.ansible_extra_vars }}
          PACKER_VAR_FILE: ${{ matrix.packer_var_file }}
          PACKER_TEMPLATE_FILE: ${{ matrix.packer_template_file }}
          GPG_SIGN_KEY: ${{ secrets.PRINTNANNY_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.PRINTNANNY_GPG_PASSPHRASE }}
          DRYRUN: ${{ github.event.inputs.dryrun }}

  nightly-octoprint-os:
    needs: [ build-octoprint-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name: [ printnanny-os-desktop-bullseye-arm64--octoprint ]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - id: publish-nightly
        uses: ./.github/workflows/scripts/publish-nightly
        with:
          IMAGE_NAME: ${{ matrix.image_name }}
          DISCORD_WEBHOOK: ${{ secrets.PRINT_NANNY_DISCORD_DEPLOY_WEBHOOK }}

  build-repetier-os:
    environment: nightly
    needs: [ build-printnanny-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [  bullseye ]
        arch: [ arm64 ]
        platform: [ debian ]
        variant: [ desktop, slim ]
        include:
          - image_name: printnanny-os-desktop-bullseye-arm64--repetier
            ansible_playbook: ./playbooks/octoprint/generic.yml
            base_image: printnanny-os-desktop-bullseye-arm64
            packer_template_file: templates/octoprint.pkr.hcl
            packer_var_file: vars/octoprint.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: desktop
          - image_name: printnanny-os-slim-bullseye-arm64--repetier
            ansible_playbook: ./playbooks/octoprint/generic.yml
            base_image: printnanny-os-slim-bullseye-arm64
            packer_template_file: templates/octoprint.pkr.hcl
            packer_var_file: vars/octoprint.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: slim
    steps:
      - name: Echo Step
        run: echo "TODO building ${{ matrix.image_name }}"

  nightly-repetier-os:
    needs: [ build-repetier-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name: [ printnanny-os-desktop-bullseye-arm64--repetier ]
    steps:
      - name: Echo Step
        run: echo "TODO publishing ${{ matrix.image_name }}"

  build-mainsail-os:
    environment: nightly
    needs: [ build-printnanny-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [  bullseye ]
        arch: [ arm64 ]
        platform: [ debian ]
        variant: [ desktop, slim ]
        include:
          - image_name: printnanny-os-desktop-bullseye-arm64--mainsail
            ansible_playbook: ./playbooks/octoprint/generic.yml
            base_image: printnanny-os-desktop-bullseye-arm64
            packer_template_file: templates/octoprint.pkr.hcl
            packer_var_file: vars/octoprint.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: desktop
          - image_name: printnanny-os-slim-bullseye-arm64--mainsail
            ansible_playbook: ./playbooks/octoprint/generic.yml
            base_image: printnanny-os-slim-bullseye-arm64
            packer_template_file: templates/octoprint.pkr.hcl
            packer_var_file: vars/octoprint.pkrvars.hcl
            arch: arm64
            os: bullseye
            platform: debian
            variant: slim
    steps:
      - name: Echo Step
        run: echo "TODO building ${{ matrix.image_name }}"

  nightly-mainsail-os:
    needs: [ build-mainsail-os ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name: [ printnanny-os-desktop-bullseye-arm64--mainsail ]
    steps:
      - name: Echo Step
        run: echo "TODO publishing ${{ matrix.image_name }}"

