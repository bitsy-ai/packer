name: 'Publish image to CDN'
description: 'Publish image to CDN via gsutils'
inputs:
  DISCORD_WEBHOOK:
    description: 'Publish using Discord webhook'
    required: true
  IMAGE_NAME:
    description: 'Name of image to build'
    required: true
  PRINTNANNY_API_TOKEN:
    description: 'Release Service user API token'
    required: true
  IMAGE_VARIANT:
    required: true
    description: 'desktop|slim'
runs:
  using: "composite"
  steps:
  - uses: actions/download-artifact@v2
    with:
      name: ${{ inputs.IMAGE_NAME }}
      path: dist
  - name: Write deploy key
    shell: bash
    run: echo $GCP_SERVICE_ACCOUNT_KEY > key.json
  - name: Activate Service Account
    shell: bash
    run: gcloud auth activate-service-account $GCP_SERVICE_ACCOUNT --key-file=key.json
  - name: Print Env
    id: manifest
    shell: bash
    run: |
      ls -ahl ${{ inputs.IMAGE_NAME }}/
      cat ${{ inputs.IMAGE_NAME }}/env.sh
      . ${{ inputs.IMAGE_NAME }}/env.sh
      echo ::set-output name=image_stamp::"$IMAGE_STAMP"
      echo ::set-output name=image_name::"$IMAGE_NAME"
      echo ::set-output name=image_path::"$IMAGE_PATH"
      echo ::set-output name=image_url::"$IMAGE_URL"
      echo ::set-output name=checksum_url::"$CHECKSUM_URL"
      echo ::set-output name=manifest_url::"$MANIFEST_URL"

  - name: Publish Release to CDN
    shell: bash
    id: release
    env:
      PRINTNANNY_API_TOKEN: ${{ inputs.PRINTNANNY_API_TOKEN }}
      PRINTNANNY_API_URL: "https://print-nanny.com"
    run: |
      gsutil rsync -r dist/ gs://$GCP_BUCKET/${{ steps.manifest.outputs.image_path }}/
      . ${{ inputs.IMAGE_NAME }}/env.sh
      IMAGE_VARIANT=${{ inputs.IMAGE_VARIANT }} ./tools/nightly-release.sh

  # - name: Send Discord notification
  #   env:
  #     DISCORD_WEBHOOK: ${{ inputs.DISCORD_WEBHOOK }}
  #   uses: Ilshidur/action-discord@master
  #   with:
  #     args: |
  #       ðŸ’œ New image: `${{ steps.manifest.outputs.image_stamp }}`
  #       [Download](${{ steps.manifest.outputs.image_url }})
  #       [Release Page](${{ steps.release.url }})
  #       [Manifest](${{ steps.manifest.outputs.manifest_url }})
  #       [Checksum](${{ steps.manifest.outputs.checksum_url }})
