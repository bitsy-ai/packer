name: 'Build image'
description: 'Build image from Packer template'
inputs:
  IMAGE_NAME:
    description: 'Name of image'
    required: true
  ANSIBLE_EXTRA_VARS:
    description: 'Ensure ansible extra vars created'
    required: true
  PACKER_VAR_FILE:
    description: 'Path to vars/*.pkrvars.hcl file'
    required: true
  PACKER_TEMPLATE_FILE:
    description: 'Path to templates/*.hcl template to build'
    required: true
  GPG_SIGN_KEY:
    required: true
  GPG_PASSPHRASE:
    required: true
  GPG_KEYSERVER:
    default: https://github.com/leigh-johnson.gpg
  GPG_KEYID:
    default: 3853ADC1F9742FC2EC43D9ACE359E824041B36D7
outputs:
  artifact:
    description: "Reference to artifact name to be used in subsequent steps"
    value: ${{ inputs.IMAGE_NAME }}
runs:
  using: "composite"
  steps:
  - name: Ensure ansible_extra_vars on disk
    shell: bash
    run: make ${{ inputs.ANSIBLE_EXTRA_VARS }}
  - name: Make image from Packer template
    shell: bash
    run: |
      make packer-build \
        PACKER_VAR_FILE=${{ inputs.PACKER_VAR_FILE}} \
        PACKER_TEMPLATE_FILE=${{ inputs.PACKER_TEMPLATE_FILE }}

  - name: Create environment var files
    shell: bash
    run: |
      ./tools/manifest-to-env.sh
      ls -ahl dist/
  - name: Receive author key
    shell: bash
    run: |
      gpg --keyserver ${{ inputs.GPG_KEYID }}  --recv-keys ${{ inputs.GPG_KEYID }}
  - name: Import GPG key
    id: import_gpg
    uses: crazy-max/ghaction-import-gpg@v4
    with:
      gpg_private_key: ${{ inputs.GPG_SIGN_KEY }}
      passphrase: ${{ inputs.GPG_PASSPHRASE }}
  - name: GPG user IDs
    shell: bash
    run: |
      echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
      echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
      echo "name:        ${{ steps.import_gpg.outputs.name }}"
      echo "email:       ${{ steps.import_gpg.outputs.email }}"
  - name: Sign the release
    shell: bash
    run: |
      gpg --detach-sign dist/sha256.checksum
  - uses: actions/upload-artifact@v2
    with:
      name: ${{ inputs.IMAGE_NAME }}
      path: dist/
  